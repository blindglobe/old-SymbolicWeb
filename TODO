A Quasi-Quate thingy for JS that doesn't suck
=============================================

...is needed.




Consider sending response-data for AJAX-requests also; not only COMET-requests
==============================================================================

Title speaks for itself.



Redesign low-level protocol
===========================

(Ok, this reads like nonsense .. ignore it if you wish .. i've started on
something in the src/node/ directory though)

Don't use words like "AJAX" and "Comet". I'm currently (04/20/2008) working
on a HTTP-client that is not a web-browser (libcurl) and does not have
JS available.

Instead of using words like "server" and "client", use the word "peer". Which
one that actually is a server or is a client should not matter. Each have
the same API; both can listen for incomming messages or events, and both
can send messages or initiate events regardless of whether they are a
server or a client.

Don't send JS in return when "talking about" the communication scheme.
Instead treat the "JS server" at the browser as if it could be any type
of server (libcurl and a C program for instance). It, whether it is JS
or a C program or a Lisp program, should instead parse the URL-encoded
GET and/or POST variables and take action based on that.
